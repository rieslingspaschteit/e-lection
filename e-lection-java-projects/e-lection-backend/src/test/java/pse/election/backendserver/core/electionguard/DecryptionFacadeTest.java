package pse.election.backendserver.core.electionguard;

import static org.mockito.Mockito.anyLong;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import com.sunya.electionguard.ElGamal;
import com.sunya.electionguard.Group;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentCaptor;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import pse.election.backendserver.core.service.BallotService;
import pse.election.backendserver.core.service.DecryptionService;
import pse.election.backendserver.core.service.ElectionService;
import pse.election.backendserver.core.service.TallyService;
import pse.election.backendserver.core.service.TrusteeService;
import pse.election.backendserver.entity.Contest;
import pse.election.backendserver.entity.Election;
import pse.election.backendserver.entity.OptionEncrypted;
import pse.election.backendserver.entity.PartialDecryption;
import pse.election.backendserver.entity.Tally;
import pse.election.backendserver.entity.Trustee;

/**
 * Tests a single good case for accumulation and combining of partial decryption
 */
@ExtendWith(MockitoExtension.class)
class DecryptionFacadeTest {
  static final long ELECTION_ID = 0L;
  static final String CONTEST_NAME = "contest";
  static final int MAX_OPTIONS = 0;
  static final int OPTION_INDEX = 0;
  static final String OPTION_ENCRYPTED_PAD = "013E131D6567DCAD3D4833B28182F42843312AB7573CEEC140F78F7FE4BA160BA7ADB4B33EC6941C453359DD5F86F116B869470F6E75CC50F5027BBFDF03F9DD670E53EFA4B1E62BCC01AA5EA6CD044AC64626272DE5F96E4D029C054D04D83EED3DF4B54CF97C26ECADF75F33F9990B2E003A1BABF3CFEE941BE1A5C5574A7F158E047B1368C5C0C405D370530C1B256ED25567BDDF4821F90D62D9D23972954D158A63D489D573CC1F27BA588D0FAB6DE5EB5C3A85A5CB30907A6CCD465ED0D5DD649E83865955108243179778DEB6487E2DC6407C23C2A0D75F32A32A7299DE2C2B964D9F98406C9245C1C2A85D04EE2977F6AE42A1BAD6F5980C0DD461C36B6EE1F75A52BB4A7D48ADE6C5B6CE8560559248D0AEF051CE47919BA0A18113280D6F2E62E0D1EF36C2CC9A99FE0743E95D02D5C5BB5AC03F8DD9D635D66797DAE177246B4C0D21AE2D833BD740850FFA02581CF667A7C37D7A2016B78467D902A4938B027C615265593FC51C7747D1A9AAABF0FC6B7136968414420C71C84475D1FB50B452DB9CCE8190E120DD4B5E51F88142D250E2D738DCA56FDBC591D08BE7391E7C61174C30D4471ABF3C857D7468BFE31C6C1758E9698B58028F27C3B2042C9D4E0A4103CED34A25AED5FF71E188E036571FEB051A118A0D99C5514CC1CAD3B9E18FF4084B5CEA902428B8717CE8A500EB839CED8DF31403034178EC";
  static final String OPTION_ENCRYPTED_DATA = "09BC589669CFD9BCC52F0F655056F4CCED952A02D6E4B80F3A8CD29140F0CA29405BC461C1DD949E146B32D2676370362C7A91CD20921C5F095B0045E613A33C017BD297C275283F22B8598AF99F7050054306DE8DAC7C2A93ED970505F83E1FE19179D1204A9B51B6AB3A60828D5544373628A21E5B9ECD6D6045296DDEB38DF37C4CA97DE2B15D717CB6B13ECA8C04378BC471BF4BB464244C455B68A02406B8CB9F825EDE30549438137CC3C65688A6B6DD3B19D3D745902971AC606E2DE6156A7853695F104FB6F92B560BCD3E62AFEAD498ED2AE73789602CAB79581A3376D85F84AFC084CB971182ADA9D1B9FE08E50606E3A5339AC3A6416CB492836DA0DE52AE75794B0E5DA3E33D1E0E02B96847168A83076AE4D2BAF58706A65C9FECDBC3A5C20532DD031D82DC32DEA958DCE5851C21034421E76479A0AA9CA11DCBE0049844A5E45D330AA81F46F7D499F3D113AFFCDC60A51131E451B5296FA8F0D480AC424F9E0A96B1D5451491C0D311FA595345EE9C5F463322572DE0B480A031D0CF8E4E277CFFDFA12C88CF684DB13DBBD02907FEC4B743040C1F2A0F4641F46CC70387C639A67EAF89311D25D13C7B7510A9DF085CED5EDF709039004BD0D8EF70F076784135F89125B69DC9FA513995DCC9445AA967F30A19595D4172CFD5335AA06168087FFD1708AC32844DC86140B0089DB6E7B7FCB3EAA75EEDD2";
  static final BigInteger CIPHERTEXT_PAD = new BigInteger(
      "013E131D6567DCAD3D4833B28182F42843312AB7573CEEC140F78F7FE4BA160BA7ADB4B33EC6941C453359DD5F86F116B869470F6E75CC50F5027BBFDF03F9DD670E53EFA4B1E62BCC01AA5EA6CD044AC64626272DE5F96E4D029C054D04D83EED3DF4B54CF97C26ECADF75F33F9990B2E003A1BABF3CFEE941BE1A5C5574A7F158E047B1368C5C0C405D370530C1B256ED25567BDDF4821F90D62D9D23972954D158A63D489D573CC1F27BA588D0FAB6DE5EB5C3A85A5CB30907A6CCD465ED0D5DD649E83865955108243179778DEB6487E2DC6407C23C2A0D75F32A32A7299DE2C2B964D9F98406C9245C1C2A85D04EE2977F6AE42A1BAD6F5980C0DD461C36B6EE1F75A52BB4A7D48ADE6C5B6CE8560559248D0AEF051CE47919BA0A18113280D6F2E62E0D1EF36C2CC9A99FE0743E95D02D5C5BB5AC03F8DD9D635D66797DAE177246B4C0D21AE2D833BD740850FFA02581CF667A7C37D7A2016B78467D902A4938B027C615265593FC51C7747D1A9AAABF0FC6B7136968414420C71C84475D1FB50B452DB9CCE8190E120DD4B5E51F88142D250E2D738DCA56FDBC591D08BE7391E7C61174C30D4471ABF3C857D7468BFE31C6C1758E9698B58028F27C3B2042C9D4E0A4103CED34A25AED5FF71E188E036571FEB051A118A0D99C5514CC1CAD3B9E18FF4084B5CEA902428B8717CE8A500EB839CED8DF31403034178EC",
      16);
  static final BigInteger CIPHERTEXT_DATA = new BigInteger(

      16);
  static final String DECRYPTION_ZERO = "EAC47FA73E1D44DE12819D0AFB01A512AFAE9756B363AB5E317EFE2C479FA000CF40BE4537149C912B54BBF43D7D7DB1CDDB2248B676A07E2EE06B95A3F11ADA98F9AAEB6A08EEAD3136338A6B09340A551375F041568C6334031CD92D05151EF639B670446FD4A86A5A07B31D13E8B2E7BA1408FE98014E3B65FC35CE95992B43CC627E5C9CB86D4E54594E611E1E0432B1866C2C419F06E39B279DDE6EA7DC9546587DF141F3579F856E9A2676A969B83EBC7941A9E7EA78D726D429A84ABDDECEDAFCB1129D29252BCEFB3870D53DDBA297390A5FC00968F7FEB273312A77A8B3FB29AFB4CDCB51B344A0B1BA3282A2B02F4FBC8E240FBCD894D51D419F362ED48941B895B4C1ABB1D8752B6526D97EC61E95E9B6AB2B186018FC9CC1317AD3344E2C0D608076F74789D434D2B92958C6F4ACF396985BD517C1FBBADF3D29BFB0825E8EFF30F530C74AC9916179FFA9EE523C9BB171EE3EFF7F2B516EE243CFE32C9765E8B1FBA3296FF677B2E19CCCA86B4715A0D6CA1E8374B671ABFD8361B1841159A38D3B7069E0A69398BA14837249AA4C15CC9C1D9423F946A92F8E2CD4AF0F540911B267482B5C870E8EF1102E2324CDCE55CFFA4AC9BFFDB07043F15D23A864D0A5944E8D3B349BEEE693722DCC1690822AD8D9F110720D31C48425A61AE5397D57E3789C4574BE6BF24A663C44B5F0C575DA4D0DA0B0DA4D22B8";
  static final String DECRYPTION_ONE = "9CAD91033ABA4CB56F6E079ADFF0018F4C9DE8C939E9A98404D59EE5AE474EE04400C21D22F56F05B4421D81E495C9BF5096ECDF452C39F2AADF614CFAD2D0C65536A0992BEC745ED73B5D15DD445888C509C9C54FC513CA55F47355D08A7572EF9B3850BDC878A853EB9F129E097B61A47714ACDD9962988072F8DA2D2F0816EDA2F77D13C20B26E6ABC8A19B1FF931E23032C762C68A388E293FFB84D14BB27795BE0CD52DF62B421DA32F00470F1960412CD0A67CF719C4E2B050052B7F71A984DD149E0C85BC65662F892C5510B2D509D035CFB7D9368AF70BBFC5A96EE8843FC2E10BD72DA300DE2FBE7E3F66F34F6E4242F37F4A9DF70C1E8D9C4F93FA16D5A7B22B13ACBE563AFA7E8A86EFE3B031466FFCBAFD9CF2CD2244EF820944B9244BACCD7FFEA66465669C987924E03B1A5B40491AB7572B06E295320E06D8ED0717C765E478089B90D072962DA346CD0B6BAC46BD731C7BCB9E51CDAA91DFD9D6738568ABDC6F402C985CC06C977CE63D69E759B7AF1E878CF853E7F2053CA2E2B1895812F908F3DBCEA744DFAC3FFFA04E4E14ABE751A9659D57073D85BC0CEC26ED1167CF301B22CEB46ED579D6A3177F059BF71B0B689FBA71B0244441E9C6C359E75B9B25E6794254A0EDF7EF1DFD2BADBDED407F936ADAF94ABFE7FEEF543BF2E0363D1AD51B660112FC07E364199C3060A3964D65216AEFA113D6C2";
  static final String DECRYPTION_TWO = "B2871717D024EA587B992376EBA25D8B61508DC918D4821992A566A0F9CEE58C2793C54705FD54FB511699D0F2A416C582A6CE6BAE71BF2FE6E2DB5E53A382CBD1B7B8AD901BD7059EA6731007C0C4AFFF10AE3C93ED37BF54037F3F82755E229990528A0A55139F9619C8FDF04F017D1EA5832507168918F9DB8A5A4145470D64C8A5D0A50A0AA9BA7FC9E1740DAB258B8EB88D3A04082714904F156D9F8D6DCFA54343E83EB4D0E08860C853FB8A68465CAB39D2324C9CA36CF3E21C0A21000401A63671B44F9C168C7D736A3DBDC0ABB5651E29EFF07AD0939127F55BE18336F92AC79619E40C4753336E58C6D0639F28263705F7D59B96DE344E7B0CDB5CA19744596CD931813267A36755902776B7C52682C8DE5A4DDF01D307A54CB7BDB35BB40F50A489DB233BACF4EAF12E63D8D9F704BD27A7073F175212C74B89E3F889D19CE65EFA3AF3E0D0D23D5E9E6929E9BED7BF15C745617C4EA50CEB865F1A3F09D4882D5AFB1136ED1658013EC2A212F7BBA5ED94138ED2E9AF7D71D5546B92B4FF9950C2F02707E014676AC64B16202AA8885F1147F74F4E7422B6C4DE55011EAC20C0B8C970C332F59CBF83064C11E341057E8AB31F638406095956B6208947957C2917EA63F9F058B306D171F3D51FE9F12B1F39411C575F68898B01E94536F4776EF237DBF7DEE0018942FBE9223A5E75AED8B2D7D1457525513B71";
  static final String DECRYPTION_THREE = "3980382271BA801B01718407EACCBA363E8D47B0275B3AF72FDD86CA75A0F768F9BCC45BFD92A18675EC0156A24473C3C439CD10F969397897BB946C7E4E9365D1F0057832AEACD44B3E310B544B543CAADE79C7216469656E2D2BFCD323B5858D168468E766C7C829AF74D0AE2BFDE567A987635EAB11CD7E2E5D5E4E7FF75062AB0FC98265664874DA0BDD8B2434CD3F0DD3022B12707FA98AF7DC3FB126320D4828D3506CB8A556ADADCFEFAB9F3241772F207CC8A12180950D1A6B9DD1FC14EC7D5C40BBF2C445B825E6CD619D05C880900ED35B8A81E0EAE18CBFA97DCD4D63F5ABEBE4E7C9F3F4BAC4CE1A145D50B4681792443C36D0049BEBD45257F425D3DE600F5D3810D1387281B0D0DD737150653DF7184BBF72622887EBB30A0B1812470CB8120DB9369692DDEE7E23EA6AF1D9EB6939C2C4CC942F0D221AE8D54EB5BA623278FF464C3E4812A9D6A61D19F9DB6619FAF0DB50AEC6674D99404A88DA85C041639F9CC5AA66041AAE16EA1D044B3713DF2EA23F0AF52297293EF2C1C3F085EE79F35BA1C106EE0478862149A30D61E4F17D5531697EA6DD193ED50226EEE1F5276A7CCEDE18899664570A9377D06DCD7E5F3C52A6D4B2DBAC8DCA1ADE1032D55E4042AF7121FF20F01F67A43C169404026C8ECD5966E61593871F4DE509CBABCC33CC1DF2A2E0F91674F00579629E80091679934808198778F92B";
  final static String DATA_ZERO = "09BC589669CFD9BCC52F0F655056F4CCED952A02D6E4B80F3A8CD29140F0CA29405BC461C1DD949E146B32D2676370362C7A91CD20921C5F095B0045E613A33C017BD297C275283F22B8598AF99F7050054306DE8DAC7C2A93ED970505F83E1FE19179D1204A9B51B6AB3A60828D5544373628A21E5B9ECD6D6045296DDEB38DF37C4CA97DE2B15D717CB6B13ECA8C04378BC471BF4BB464244C455B68A02406B8CB9F825EDE30549438137CC3C65688A6B6DD3B19D3D745902971AC606E2DE6156A7853695F104FB6F92B560BCD3E62AFEAD498ED2AE73789602CAB79581A3376D85F84AFC084CB971182ADA9D1B9FE08E50606E3A5339AC3A6416CB492836DA0DE52AE75794B0E5DA3E33D1E0E02B96847168A83076AE4D2BAF58706A65C9FECDBC3A5C20532DD031D82DC32DEA958DCE5851C21034421E76479A0AA9CA11DCBE0049844A5E45D330AA81F46F7D499F3D113AFFCDC60A51131E451B5296FA8F0D480AC424F9E0A96B1D5451491C0D311FA595345EE9C5F463322572DE0B480A031D0CF8E4E277CFFDFA12C88CF684DB13DBBD02907FEC4B743040C1F2A0F4641F46CC70387C639A67EAF89311D25D13C7B7510A9DF085CED5EDF709039004BD0D8EF70F076784135F89125B69DC9FA513995DCC9445AA967F30A19595D4172CFD5335AA06168087FFD1708AC32844DC86140B0089DB6E7B7FCB3EAA75EEDD2";
  final static String DATA_ONE = "09BC589669CFD9BCC52F0F655056F4CCED952A02D6E4B80F3A8CD29140F0CA29405BC461C1DD949E146B32D2676370362C7A91CD20921C5F095B0045E613A33C017BD297C275283F22B8598AF99F7050054306DE8DAC7C2A93ED970505F83E1FE19179D1204A9B51B6AB3A60828D5544373628A21E5B9ECD6D6045296DDEB38DF37C4CA97DE2B15D717CB6B13ECA8C04378BC471BF4BB464244C455B68A02406B8CB9F825EDE30549438137CC3C65688A6B6DD3B19D3D745902971AC606E2DE6156A7853695F104FB6F92B560BCD3E62AFEAD498ED2AE73789602CAB79581A3376D85F84AFC084CB971182ADA9D1B9FE08E50606E3A5339AC3A6416CB492836DA0DE52AE75794B0E5DA3E33D1E0E02B96847168A83076AE4D2BAF58706A65C9FECDBC3A5C20532DD031D82DC32DEA958DCE5851C21034421E76479A0AA9CA11DCBE0049844A5E45D330AA81F46F7D499F3D113AFFCDC60A51131E451B5296FA8F0D480AC424F9E0A96B1D5451491C0D311FA595345EE9C5F463322572DE0B480A031D0CF8E4E277CFFDFA12C88CF684DB13DBBD02907FEC4B743040C1F2A0F4641F46CC70387C639A67EAF89311D25D13C7B7510A9DF085CED5EDF709039004BD0D8EF70F076784135F89125B69DC9FA513995DCC9445AA967F30A19595D4172CFD5335AA06168087FFD1708AC32844DC86140B0089DB6E7B7FCB3EAA75EEDD2";
  final static String DATA_TWO = "9CDB9723D8262E8E646C33AABC08DF3B19B450003763614327D71B38436A6EDC7119C6666D944E39CA7FE88D5088C661A57DC71F67E74FC86DF700B7488F7E3A69661C357706D25045B0DC850AD05BA5AE2C573107C934DF50B074FECB61F5F13355ED73A52404630352837B53469B092D9150C7C0592F91EEA32C4B909B436C96347377A05C92051B4C2B251543E17579835DCB2421F255E8F2D1047B886B6D0440BE452FAA60C8B6F63C752847BB3C614D1C3A17A3B0FF82443B0F96D003ADEF6F279A59A5FB63FC8FEF54AC3DEE8E37FAE2112AD8684922AEBD5913E2909830F0A8C563AD58CC589824011A495DF872AE0BFD13A0E19DAF793760F93E268D9F4C7464EC31A19AE5400C6F275FBFFAEA794B015DCCDCE1A945949D4AC54ED914C54AA51B6034089F22446F825B8CC8F0189ED804495A1407B3C42002F158086A79FE51678CB57F43D6F13BD1B3135BEAAC4E85A09E72D8FC2537B4CB7FA52AB79ECE537F72951B138DF7DCB6C62A3981B887BC2BABCCA72165A1173F1FCB28E5D5E6A20B0E55317E7D69E3D37D99B918E48B9C0561B5A7ADFFD8668D38537D19119E071BD6F4E2A349DC522D3C83EAD0F2518F02989F0F5D2ABEC3CCAB3FDDCB17223D71158310DFFA5B16F96267E6782426FA22DFFBEC210745FDDEDB7C8500C4465AECC35820CFD79571D73E314BCE4294413D0DFC876A909F12C3E29A34";
  final static String DATA_THREE = "9CDB9723D8262E8E646C33AABC08DF3B19B450003763614327D71B38436A6EDC7119C6666D944E39CA7FE88D5088C661A57DC71F67E74FC86DF700B7488F7E3A69661C357706D25045B0DC850AD05BA5AE2C573107C934DF50B074FECB61F5F13355ED73A52404630352837B53469B092D9150C7C0592F91EEA32C4B909B436C96347377A05C92051B4C2B251543E17579835DCB2421F255E8F2D1047B886B6D0440BE452FAA60C8B6F63C752847BB3C614D1C3A17A3B0FF82443B0F96D003ADEF6F279A59A5FB63FC8FEF54AC3DEE8E37FAE2112AD8684922AEBD5913E2909830F0A8C563AD58CC589824011A495DF872AE0BFD13A0E19DAF793760F93E268D9F4C7464EC31A19AE5400C6F275FBFFAEA794B015DCCDCE1A945949D4AC54ED914C54AA51B6034089F22446F825B8CC8F0189ED804495A1407B3C42002F158086A79FE51678CB57F43D6F13BD1B3135BEAAC4E85A09E72D8FC2537B4CB7FA52AB79ECE537F72951B138DF7DCB6C62A3981B887BC2BABCCA72165A1173F1FCB28E5D5E6A20B0E55317E7D69E3D37D99B918E48B9C0561B5A7ADFFD8668D38537D19119E071BD6F4E2A349DC522D3C83EAD0F2518F02989F0F5D2ABEC3CCAB3FDDCB17223D71158310DFFA5B16F96267E6782426FA22DFFBEC210745FDDEDB7C8500C4465AECC35820CFD79571D73E314BCE4294413D0DFC876A909F12C3E29A34";
  Election election;
  Contest contest;
  OptionEncrypted optionEncrypted;
  List<OptionEncrypted> optionEncryptedList;
  List<Contest> contestList;
  ElGamal.Ciphertext expectedCiphertext;
  List<PartialDecryption> partialDecryptionListZero;
  List<PartialDecryption> partialDecryptionListOne;
  List<PartialDecryption> partialDecryptionListTwo;
  List<PartialDecryption> partialDecryptionListThree;
  PartialDecryption partialDecryptionZero;
  PartialDecryption partialDecryptionOne;
  PartialDecryption partialDecryptionTwo;
  PartialDecryption partialDecryptionThree;
  Tally tallyZero;
  Tally tallyOne;
  Tally tallyTwo;
  Tally tallyThree;
  @Mock
  private TrusteeService trusteeService;
  @Mock
  private BallotService mockBallotService;
  @Mock
  private ElectionService mockElectionService;
  @Mock
  private TallyService mockTallyService;
  @Mock
  private DecryptionService mockDecryptionService;
  @InjectMocks
  private DecryptionFacade decryptionFacadeUnderTest;

  /**
   * Setup for testCombineOptionEncryptedToTally
   */
  void setUpDecryption() {
    election = new Election();
    contest = new Contest(ELECTION_ID, CONTEST_NAME, MAX_OPTIONS, MAX_OPTIONS,
        List.of(CONTEST_NAME));
    optionEncrypted = new OptionEncrypted(0L, 0L, 0, 0, OPTION_ENCRYPTED_PAD, OPTION_ENCRYPTED_DATA,
        "", "");
    optionEncryptedList = new ArrayList<>();
    optionEncryptedList.add(optionEncrypted);
    contestList = new ArrayList<>();
    contestList.add(contest);
    expectedCiphertext = new ElGamal.Ciphertext(
        Group.int_to_p_unchecked(CIPHERTEXT_PAD),
        Group.int_to_p_unchecked(CIPHERTEXT_DATA));

    when(mockBallotService.getAllOptionEncryptedOfContestAndOption(
        election.getElectionId(), contest.getIndex(), OPTION_INDEX))
        .thenReturn(optionEncryptedList);
    when(mockElectionService.getAllContestsOfElection(election.getElectionId()))
        .thenReturn(contestList);

    tallyZero = new Tally();
  }

  /**
   * Verifies that the combination of OptionEncrypted into Tallies is functioning
   */
  @Test
  public void combineOptionsEncryptedToTallies_CombinedOptionEncryptedMatchesExpected() {
    setUpDecryption();

    decryptionFacadeUnderTest.combineOptionsEncryptedToTallies(election);

    ArgumentCaptor<Tally> argumentCaptor = ArgumentCaptor.forClass(Tally.class);
    verify(mockTallyService).addTally(argumentCaptor.capture());
    Tally caputuredTally = argumentCaptor.getValue();

    Assertions.assertEquals(caputuredTally.getCiphertextDATA(),
        expectedCiphertext.data().getBigInt());
  }

  /**
   * Sets up the Evaluation of the Result over one Contest with four Options.
   */
  public void setUpResult() {
    election = new Election();
    contestList = new ArrayList<>();
    contest = new Contest(ELECTION_ID, CONTEST_NAME, MAX_OPTIONS, MAX_OPTIONS,
        List.of(CONTEST_NAME, CONTEST_NAME));
    contestList.add(contest);

    partialDecryptionListZero = new ArrayList<>();
    partialDecryptionZero = new PartialDecryption(DECRYPTION_ZERO);
    partialDecryptionListZero.add(partialDecryptionZero);
    partialDecryptionOne = new PartialDecryption(DECRYPTION_ONE);
    partialDecryptionListZero.add(partialDecryptionOne);

    partialDecryptionListTwo = new ArrayList<>();
    partialDecryptionTwo = new PartialDecryption(DECRYPTION_TWO);
    partialDecryptionListTwo.add(partialDecryptionTwo);
    partialDecryptionThree = new PartialDecryption(DECRYPTION_THREE);
    partialDecryptionListTwo.add(partialDecryptionThree);

    when(mockDecryptionService.getAllPartialDecryptionOfTally(0L, 0, 0)).thenReturn(
        partialDecryptionListZero);
    when(mockDecryptionService.getAllPartialDecryptionOfTally(0L, 0, 1)).thenReturn(
        partialDecryptionListTwo);

    tallyZero = new Tally(0L, 0, 0, "", DATA_ZERO);
    tallyOne = new Tally(0L, 0, 0, "", DATA_ONE);
    tallyTwo = new Tally(0L, 0, 1, "", DATA_TWO);
    tallyThree = new Tally(0L, 0, 0, "", DATA_THREE);

    when(mockTallyService.getSpecificTally(0L, 0, 0)).thenReturn(tallyZero);
    when(mockTallyService.getSpecificTally(0L, 0, 1)).thenReturn(tallyTwo);
    Trustee trustee = new Trustee();
    trustee.setAvailable();
    when(trusteeService.getAllTrustees(anyLong())).thenReturn(List.of(trustee));

    when(mockElectionService.getAllContestsOfElection(0L)).thenReturn(contestList);
  }

  /**
   * Calculates the Result over Decryption and the Data. Verifies that the combination of
   * PartialDecryption and the combination of them works.
   */
  @Test
  void evaluatingResultTest_CombinationOfPartialDecryptions() {
    setUpResult();
    decryptionFacadeUnderTest.evaluateResult(election);

    ArgumentCaptor<Map<Integer, Integer[]>> argumentCaptor = ArgumentCaptor.forClass(Map.class);
    verify(mockElectionService).setResult(anyLong(), argumentCaptor.capture());
    Map<Integer, Integer[]> list = argumentCaptor.getValue();

    for (Map.Entry<Integer, Integer[]> elem : list.entrySet()) {
      Assertions.assertEquals(elem.getValue()[0].toString(), "1");
    }
  }


}