package pse.election.backendserver.core.electionguard.VerifiactionFacade;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.ArgumentMatchers.anyLong;
import static org.mockito.Mockito.when;

import com.sunya.electionguard.Group;
import java.math.BigInteger;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;
import pse.election.backendserver.core.electionguard.VerificationFacade;
import pse.election.backendserver.core.service.ElectionService;
import pse.election.backendserver.entity.Contest;
import pse.election.backendserver.entity.Election;
import pse.election.backendserver.payload.dto.BallotProofDTO;
import pse.election.backendserver.payload.dto.ChaumPedersenProofDTO;
import pse.election.backendserver.payload.dto.ConstantChaumPedersenDTO;
import pse.election.backendserver.payload.dto.DisjunctiveChaumPedersenDTO;
import pse.election.backendserver.payload.dto.ElgamalProofDTO;
import pse.election.backendserver.payload.dto.EncryptedOptionDTO;
import pse.election.backendserver.payload.dto.SchnorrProofDTO;
import pse.election.backendserver.payload.response.record.ElectionGuardInitializedWrapper;

@ExtendWith(MockitoExtension.class)
@SpringBootTest(args = "--oidcClients=./oidcClients.toml")
class VerificationFacadeTestV3 {

  Election election = new Election();
  Contest contest = new Contest(12, null, 2, 0, null);
  @Mock
  Election election2;
  @InjectMocks
  private VerificationFacade verificationFacade;
  @Mock
  private ElectionService electionService;
  @Mock
  private ElectionGuardInitializedWrapper electionGuardInitializedWrapper;

  @Test
  @Disabled
  void verifyDecryption() {
    ChaumPedersenProofDTO chaumPedersenProofDTO = new ChaumPedersenProofDTO(
        new BigInteger(
            "1AA37332A358D8A77EC25E09D13D8D6786F0472A57790D0758184178DC19E45A78F3436729D0895D0E8693D530BAB068778F52EE882ECC072FA0CB23BE6B6F0FDB73FCFBE72062443204CCD3E503FAEB4383C7DB03536E8E356B57B27CB2027A764608E203571ACAAB6601023961BD3B51D36256C92F1B70175A156B58A8CA5DF6075F2C41D95384A2031D3DBB61B2D9BDE1DA258B01D382AEE38A7402B1FACD45B62AF8F968754F427793FFB5B83C7187CD097C5BC28E51400DAFAAA772D7F22100446062AA3CD582FEC7BE772D84877E87968BB301B133F70FD3E12137CF6A8BDEED70CB78592CCF515476E55E76354B1E46773462B1CB338D84DA8ED9046764A2183911D3CEFF56CC8C756E7F010B314F62702F90C3FA7A597DCD95B1B4F3A36E2789810CED6BF6A6EDD724AD03A1690603D765943CC9130BDE39DCC9D96EE56849A97EC7F501D9E1754E20FCAB17B5FB28424CA4174C82B7ADA317DB61859C18AAA77C7E35F6E7711DE6B74EAA221A167C3E8D7551454A87FD0933BFC751C0A3F045C76D9500D3C8F05199049A58573E4D50FEDF23B805B8AF712400DE79F4FC654BC51D39B87BCDCEEADC73ADDAE7658841DA0A5CDF77FD611187688BEBBE8596798CD0BC0EE57B0AE52D1D3C5B5C95AD8643B6DE90EF173D8CE6EE22AF46B0F1E434794BDB3A637DA7467E5C538B2D7C634A2D35C25161301E367CFB13",
            16),
        new BigInteger(
            "48261D26EE1683C8C63BD19226486CF81865374BB73800A8B2CA6574D200A394AD369258631BC8BEBB386BAD99C8E61B47551B8F5D86FE2DF6491D114762CB1820F6B45BA96523BF63C81E9D1DCAF189A098B1D4E37B47B2CB9D6F9BB658E1057639B250712AFA395907D6FA54A4EF21D5642690D9B0D8FA1DE05FE6C252C34094047716B4724A5F469515BF683933B3A2BE002CA72724A91C696A4F185BFFA3D06C5D3F86373C09CE8412E3ACA0E9251CA9862F34A0DBCB0B625DEDA62A67814A3F0BA8044C5433A59E0C54B020279A514A33DA1F73E04942DAB2EB16D39BCBDD5BD2D96E043E40B6458655063803813DA99952D9B71CC586629B62C3C78E870460B848A479818C77BE2C28F7A458ABE9F6009F1636E896620D45B69A39B89D1CE6F136F586819814F038E719079E3A1356AC5562D201F613F346FFB65D45F3C311A68C3511A259F8D64CE9FEA132FB7DFCADB8BCDA47CDFECD5F463C0FB78B0E91D93EA52054C33B2CE6D9B31330E1CCEA31BA2E27E6F68190EEF1596C210D4531491D7CF75FF2D9CE96E173FF1AB8E1B9B61D3DB275904F4358994D2CB029B58966888185A43BB9E10D453B5159C1A6893E75C660A26D1162D6E0CF15A7D2F3A7D323A54AA7E902E7F0719C5B67E7725621AEDDD084D87C39DD73DF1E449A218C80BC699FDF85F8D813E78BDDB637931CCCFC8B51E33DE969C55D24F901BF",
            16),
        new BigInteger("491FEB5E021331F4B01BEC139B75315BCAD68C6C0BAE1204D41621C392E9858A", 16),
        new BigInteger("95C95DE9A422A066F6066808E6304B5A4FDC6F54C758E739E504C56EE58DAB32", 16)
    );

  }

  @Test
  @Disabled
  void verifyBallot() {

    when(electionService.getAllContestsOfElection(anyLong())).thenReturn(List.of(contest));
    Map<Integer, ConstantChaumPedersenDTO> accumulatedProofs = new HashMap<>();
    Map<Integer, DisjunctiveChaumPedersenDTO[]> individualProofs = new HashMap<>();
    ChaumPedersenProofDTO chaumPedersenProofDTO = new ChaumPedersenProofDTO(
        new BigInteger(
            "259E3EE04075A18F94576DD856E00EF434DA8DC4FD770B952A87DA57DD42022CDCA8EA7F1AEB2A4AEC825BC713E0EC2CEB45A6229D1F240DA7695A9BDAAAC9A98AE61EC8617723B62B69DE19B54133EA3190C3EE5E19060E9A1D4851D692CD36755465F2F349ED623E020FC0B43616B08A776BEE2029E0DDE0D155E8C911351C511084303D9216EFBEB8311171CEC28113773727F4283EBE6E6FAF02F7875022BD6889BA76952C3E132B4F3203A7E0C8B709FA2840B66A643AD1B32FE407C2851653C4C2645294CB2FA748F8653549B91ECB0817253A7628C204C09209538A63215E1C2AC33B5B9186BC35F40B85E94C2AB5FE78C8F84ACFBE61A39D2DD8CB7FB21E55BFB73F14AC812F62703ADF8FDA8EDAFAA2226F03F78CD40A51DF730A49AF39A4803920A41C618096BA7FDE0E6DC7E57DA0CE34A7AA4714492C41425A161D44281B982C593CBA9E176F2E857E8E3E934A3BD475A01C0C48EC5E36758C7FC7DC43B9FBBF2EEEB9F65A6CC7672BB293441131E2F7C92F00C5DBD318EC2195C93DC138B0C29DAA2568467300AE1FE0613E906F344D9E23B98D55473D25B3E503117F9C69844DBBF5E630BEB5155D81B5ED5445E1716D8828C11774D2BA7A1805C7F2E94B1C781013D821E3A00226173EBC04B6007C4BF4ABCF5240B65E28DF481580114B562CA056D7E826090483A4D260DAD62ACA23A139859660BE90960A",
            16),
        new BigInteger(
            "809B80D2E78F14ECA57911F94FC8847696B61299AC936F9BA2FC7C69915A8C04A6C0AFA4510356294E328E0BA6D3423A424DE4996C870465DE433AB833886861A0B815478AFE28E907DC55A43EEFC91AD656AF27C692CADB65C43C5339C3BDA18C82D2BA085A25E0B35643D8582056E3B814D5C94F8A12300C8DCAD9F0B08E9B59BBA5F2C9CB21583ADA758E10201406488CDBE6666C2F52B3D3B9FDFB33B0305D727E1D831FA83BF8E9006B29D1DB6FF49CBBB5749BBB147D57ADEFF93822E836829F386B6305F45A3DAA62E83609B48C34568C570E8D80C38BD29430A746B2C0F9E8AA0F14C204827D3606C924D3ACFDBD42AAF0C083B50E59B630C884F49954373FB9003080049973E3CFC24F3D40FF5B261A5D9B25E660D2DAB8B3E75F8B8AE8BA05D5A4CBA5FF7CA1F77679BFC3AEA3D80810CF9EE3BEFE780377E7E26901A36BBE7BBDCFDE7226B0E13418D9354E50DFFED0698381C70A649C03010C5F898CB07EF9346A899598A0E57D8291D3619122B8D9AED2D83BD339BA972BAE490400395FA021F6101786AF547A378D5FC3327C471E5672641E8F18102EC08C10E1FE849DB6D929E71E0AEEAA387EE1CFBF2831C8CC8D5379EC2BB0B13BA5B7FA2991E53E6285B894DC94DFFE01EDC19530BA90EE8E6463A654BBE8739C48F238AAB129EB2FAAEF411864AA69D29203A0A5473AFC6A6F58291A473D96E853C654",
            16),
        new BigInteger("090816E46568C8D2E83C199D17CF68C28D662DD2734D5C2414CA2CBCA34322A9", 16),
        new BigInteger("D154F2C978AC914D9CB3CEB3CF4D7981E373E090E3F03641052CFA0CECADA5D7", 16));
    ChaumPedersenProofDTO chaumPedersenProofDTO1 = new ChaumPedersenProofDTO(
        new BigInteger(
            "E0436E14133C97C6D8BFA97787D991C77881C4F3C6BDB15E5372A5B0112537BA77697F8FC3A10AEEEDBFAF1E70C502E2E0E6DE33F90568B7D628F1125E4291261D14CED5083C69E488695DB1B7FBDB80687A4D56EC449487E45EE3D2463C28917FE5F64B63072A0D5B8E637CACE35CD4481FA14D63BFD8C8C542AF32D5148A63BAAC8E60C5947C5476C0F20170CD5C3BF9E94479383A5F1CAB73DC796AC32A24E83E8852D5113E4BE1845F0A6E87067847C8E3AE4B78EAF37B07689EB430D972D793180CC4C1A886945244367F6826AB8673FA1502A6D1EE7B94A8D8CB47C7D8FEA34E96FF6F12269952549F12323F4DC1DB478D8117C5CAC5439C67F0B107F718ABF354F004DCD5679D7732CF1732F8C45A4717774305914BDE97526045DE7E65F91D29C5B3C729C98F045A059A6EA57FB5109A08B48D593180E0E270E8349D834924543C8185F3EECF21187DDF11B55CDF238BF28768627D6509747A16A51471C11D05BEF96620EBB52FEBC08DD7ED8A378286DFCE4D28D6B26F7AA9196F750F84776C8DD419AB978D09A619631232704970016ED9DB4B8066AE665852ECAEF41098511E8934519EDC06C6DF064D9591D2D37721018BE71F56602D03026BEE2B11F95822871CE896C912829722E63E3DD6CAC85AE38663B386266946C9056EBBE2FFA0EF3358A751C2C5400116A19B6B17079336394F01C5B5E500F1EAFA0A",
            16),
        new BigInteger(
            "7A8ED1E075D4E618F233CF10EE5C349607EBD16205D5AC27EC04128612382D4C417D9E014F47A10FC15610819EE7FB277745CDFD259821234A85321A9F7C5B2EBFDFE58E6B779619F9A96DBB2FC195890DA2EAD247F29B6C5CEB686E479B6CFEDDF2584F83EACF689A170C0598F0B7163394CBCC4066D5A08CF2EFA9271E24F72326CF4E81CC9191690864B1B7A31E2C18FAD8635A3F10056991AC49813F7C07AA1D6718AD98FE8E95828D80DAB5B30668996E6E0A147F7B36F4D710A691BC5464BA0D840409C03A73737AE6C6E90589F11BB8792DCA4B576B3D39F8ECB87F4EEF59AE88D5B427CF583B0EA33FDBC7970DBDAE7C0EBA8E02AD26BCA3628EE096CBD2232B73B1B8BAACA22A32397DD6CC16C2CFEB2966CE0DC709B86A05BB2555B09BD8C4B716887363DB65615727BE23C69B59F116DD3ED007A66A13DA26D7E8642F007E1793027F230939FB3203DA82394411AC2E434C8200D2B6C5223DA6486DB76B8D057058D7A624AD69BBFFC305DCA85A184AD4957BB974FE0EE47EA47A735FA7E165AB166CB3BA44897AB7269C66A8A4A21AACEBF4DD4653AA6028117A68C94327556CD59C6FB82310BEE77037E4D0715453578C6B03E082FC6140300384B5E43DA2E83B9FCF0E88A85DC1BA803893BC37A8A2E6449A3770817A87AD37F7E8C7028D23888266BB4331C0465AA3E111892CC541E0B0FFB4B33D983FA335",
            16),
        new BigInteger("97E5A5F62EA2848B1DC2FA931809C559BFF674DAADDA39FFE93CD18BAF7CD1FA", 16),
        new BigInteger("571A3D6F27B776E752C9DC3E2512CDE3F9C095D05D9E6BD6FF2E40D92E919D04", 16));

    DisjunctiveChaumPedersenDTO disjunctiveChaumPedersenDTO = new DisjunctiveChaumPedersenDTO(
        chaumPedersenProofDTO, chaumPedersenProofDTO1,
        new BigInteger("A0EDBCDA940B4D5E05FF14302FD92E1C4D5CA2AD21279623FE06FE4852BFF4A3", 16));
    ChaumPedersenProofDTO chaumPedersenProofDTO2 = new ChaumPedersenProofDTO(
        new BigInteger(
            "A1793B2351A2BEDF7407B85B3417B1648925159E5D0C780EF5E0C60050B546796BB2D76FF2CF274C7EE8F1C2AE8675F39D5C51CCB4AB70768B36B8AAB5CB1BEA78DA3C83150D1815CF64D3A1B0E992771A0C802C02BBD5A40899677A538F8C17ADC902E941CEB09D44C1369FD17EA92A9353A1F2C4B41CD4EE81A43F3F01F7C5B3C16A3CA37CD4095D3DFC1810A7C43BA124095D429F5EF206AA06D30470A405D93F877B6199415EA7C79E6BD68D2221F619CF2192BBDAF7A5B2A4D78DFD3EE5FBBA017FEE276D45C555CEBF981E630826B13E4DE39878ADA03D71F41C15D489A7E493F39FBA26423817EC83BFBFA96391AA0518C19F17B374AA13FF43AB2FB10C17FE5D2A8D5857B3B6ABC92B797B96B4212390970872A47E412BA369E4B05C4C69E086536299B835A805F024BF1675C69C0366654A3FB6A766671C863C5DD3F3F245FD8801DAF76F91A3AA91122623B5BE265A7EC8A915E811122EF79B8813FA7E8C8E24593CD7F8098D3C3C96E1838351D1223BE861D8E494F4A307D9B7A63762FA186F209BEAEF691D27B5945065C0BC8A341006FC757E6590E45C2498A54C4C2D2680DE9494EC52D06DA02B9407D898E8627AF0294B9684FE099B75F1A029583138B3DDE12E71F5B9B9924100B129B48C265C96C7C4DDA255B090893C6ED6EDA8CDEB8D9278FD841CB0A55BC10ADDEC7DF64575DAE388174F55EE2288DB",
            16),
        new BigInteger(
            "E5AECF483BF6CBE62FA618487C704B369460622DA26B5700D5F6760F9005B37E42B62B049C7C6A18BE87E412556ADA8BE23006F09DA7F2E689330011ED8FDDB04C31178AA6890C95996E085C5DCA8C3A21EC08A1900A8B9E7C86A139C6F8204A050EDD118E251899E3E21A9C61821FDEB51C0CA5D5777CC99D3E411B2941723CE56C5AAD9FABF8F8B70C5FA13666ADA484E811339BD76ED7AC2D37D839EC52E72CD089FA0E17CAE34CAA13E1642CDA7430A4D209D3B1C76D47280DFF9B710DF6B994C2DF1292157A44AB3D9C9A0D874435B70A906B1138FF90DDE4E46D4BAB7B2C16DDCE5BB2B1CC3B5D78DE72730EA2B700D8A378FABE66DB024F33BEB737104BDF06E291911F9BF8EE5A58F1EA27A9BE3109EF3D24445B8A54EED606AC9145C93316EEAE4FA230A4F26B2E46362D7AC1B235BEBF1EC1A247E6EA5861FF0DF7D70CE0E7685CE720956CAF3DA86F0121334F0EBB0C10319C0F9B37745DF5176B7A7EED14941D98BD8E14E9EC28AA9BDC3A33103630B447273B265CAC250EA0BF9C384BEF28B4347161874C6B63E016F4341E5F2E67DD6F58BC1416A056CE0F9DC85103882273BF15D71DEC2A7AFA25B439ABB75945447724B50D0C8B79427819421BF9DAFDD9BEF171E4E5CA0DC33214F510A83EB5964BC52F03B3C69E186B76F477AF501E805B01818F5463A43E7D8C3DA3DB3B874BE1746E1B57E4C30A2FAC",
            16),
        new BigInteger("A72B631AFA4BD7CD1D2B6E16C60C99826A5752E1D6B9CA560D510DE10A95F746", 16),
        new BigInteger("573732E539961F979C7D9A568E8C66F59466A288F3D033FD2E3031AF8BA7E2D4", 16));
    ConstantChaumPedersenDTO constantChaumPedersenDTO = new ConstantChaumPedersenDTO(
        chaumPedersenProofDTO2, 2);
    accumulatedProofs.put(0, constantChaumPedersenDTO);
    DisjunctiveChaumPedersenDTO[] list = new DisjunctiveChaumPedersenDTO[1];
    list[0] = disjunctiveChaumPedersenDTO;
    individualProofs.put(0, list);
    EncryptedOptionDTO encryptedOptionDTO = new EncryptedOptionDTO(
        new BigInteger(
            "5B8E57B5C3B2FD87B54FC8F0DD77964B4FED4E26D529F68F8A79FC18C08929E303E70A2470CB72CC07F334C6FC6206362C7F326D85F81B6A6C1EB9FF241870DA717D4B1AF2336D48D487D2DF87079E5782B78FB2C698ADE0412741D5BE0918B1A791AC96953509494858079CED91696720DFD69AF68F6ADC9F90F693CF1DCBB4DFDC30BA50B6BB79B87E031E6D85D0E140D54C024A3D59EDAE740FF4254D0181582BFE8DF6AA77F9B95A7AFB9378D1E95AE198572D1D720F3D3FF353095DB581E3A307F5F8AED5736FEA1F62195A59DFF65A5548CBF905A471CE305BEF4043FAD521A3DC96C204A7FB1BC8E81166D55A924EA9253E0D3B0A7ABE78E17A237D5E2ECA224088FE94CB837AE83CCF12B9CC7EE8EC8EDB5712810C397BE445D08E8E6DBB165A5FDD04BD6AE02774FE41AEEE36A87311C9E2ED5FEF8FE6C64E8D753112B1D4A80DEE828269752FE5C004D6D8E9AFAABCBAFD2FF9D4530819ACD02AEAC9AFB04799078FECD77FB2B3F97429507B8A2ED022135C1D6A0FBFDFEABDA8C9863B158E2A7B7D3E4214267BD7475813B5F5B1D88E605945DC1A431B41A8827C50BF4A16A1EE6482FC28C3E7FA4429489E215BA4E0204F8E0507901EA46B63C5198278182B32B9862C23716AD932306B3C751CD817E2A9EC1A54D7066822B963082354C55C724750E7ECC4A903606CD0700F2233F0566088769CD853824514EA",
            16),
        new BigInteger(
            "51245C40059AB3E1B2F62BBA446873EB111E607E43B9D53F26EC326CBC3E1C10A7769986CEBEB51B5961A6A2446E2D5D69818E8393185D1901A5553839EA50B43FB03045C3DB5585C995AFB0E419BCEC2A1AFFB14ADD89EDFC5D20B1FE3E62492D73B9E0E366F996DECF8973D9A192BC3D8DB038EA643B94216431B39CC043B0A195B6D230464CEE006AA4F0FAE15EBC22FC5C0FC259ACBACC4566FAFA7F9F5D1864D5D3A2966F076C8CA6A242B68E83F0C5B3D36BC5DAE45EA04AC783AA56D0A99F58A62BC10A07D60D5561AB550234A191F3897D2C8D23E98D5CBDF7165F59CFDED812C3BA2BDE2C87D30E4D38291D56D32A5272B3CCEF89B69938BC361C1F2F5A33341C8CDCA811BFE604DA64AC4AD936483B2A12E3429295A8E212A84E2CE721C7E5D67BC69B9D1D336A85680555790257CF240AB656B8BD741A45159F6EC441208E4389F7765923403597B4B925E9745DAD59877CAE620E24BF7763C014936FDA45D96F26D363CDEBF976C738F70C95B999E351BEF28FA01F75A5347046C836DE7A76460D7CC7478DF769FDB3F895A4EC7AB255CAAFF90F3459000D93DCFEEE7111E6DA2345341CDBF2D471F97548593F04011652DA5DE82A81C332E8F1887598614D9D663C6418B88340D80B0ACF78F6C14EE79A29B5659319C96DE8B1A78CB71BB8F14074B6A65FEC55EA3AD4E37E518C4B5C3A9E233010906F6E34F7",
            16));
    EncryptedOptionDTO[] warum = new EncryptedOptionDTO[1];
    warum[0] = encryptedOptionDTO;
    Map<Integer, EncryptedOptionDTO[]> encryptedOptionDTOMap = new HashMap<>();

    encryptedOptionDTOMap.put(0, warum);
    BallotProofDTO ballotProofDTO = new BallotProofDTO(encryptedOptionDTOMap, individualProofs,
        accumulatedProofs, "", new Date());
    //assertTrue(verificationFacade.verifyBallot(ballotProofDTO, new Election()));
  }

  /**
   * Verifies one given correct Schnorr Proof for an ElGamalPublic Key Show that verification of
   * Schnorr Proofs works
   */
  @Test
  void verifyKeyCeremony() {
    SchnorrProofDTO schnorrProofDTO = new SchnorrProofDTO(new BigInteger(

        16),
        new BigInteger(
            "E5D4B761F41C010A796D4B0D799F66477AB447AA5A45DB234CEA6B6025EC77F9E90F47FA6BC8C617E0CEA7CC2AB4D1A89074147A7524D61540295DC2EB0A5438D5EC1A874044F3261C7282BC295B5BA34ABDFD44944C8EABB5B563205B6A5F488CA277A57A6FC8B08D3ADC27582595625828BC588157F06BA01729B9134D8420AC2DECDA889197394A029B766D3F8E3F1F0FADF5BC0E6387AC129E780B55F22ECE1611217A41BD1D1A734A9FD8E3338BDD69B829841CC7765D120E5F8EE7F909EB93629C2BAC7FA1B00B5793D785681F43D181C585C627A732C3B628D57CE4C78598B45AA0A6F2F7420208FB3187E1FF84018282AF6322FA476D1FC85323BC55262478A3606B15CA3676BC91077BC2A62B7D5F8703A7EE0125B360227E0C6646507539F784AE47537A0604BD8BBA6842839E05C007026AEE8F11B996BF0EA2374BD9EA2C5C3EF74A4A712FDA9D7C380F6149FB6908C2B53664E8DE546EF30B7A9409D1C19D6ED4401C6373F7B1E27831850066A88A50DC9AE108176ED698848219B1B7358584491CA1E084380A2E0F94C546C8E791E85A3BC2CC94C0E5E72AC9E19837B8FFF2FCD79F8BF0A18C7E72F523A80869A92E903BEC5FCDB0652691D53D8ECCD3BD718823FC7B7CE4CD579790181239E9922343C389AB8E518186614119FF4C59754C285C9BE2915D0B097B6377F5D16744E01CED5AC538C683CC9838",
            16),
        new BigInteger("477624FCD8ABE95119DC98F8F9ACE899BE94AD0D449DD2EB921E9707E39C8633", 16),
        new BigInteger("E1C6709360D45A060881FC2E1DD406623EF1B81BF2DA646A32D0C3847240E7FA", 16));
    SchnorrProofDTO[] schnorrProofDTOList = new SchnorrProofDTO[1];
    schnorrProofDTOList[0] = schnorrProofDTO;
    ElgamalProofDTO elgamalProofDTO = new ElgamalProofDTO(schnorrProofDTOList, null);
    System.out.printf(String.valueOf(verificationFacade.verifyKeyCeremony(elgamalProofDTO)));

    assertTrue(verificationFacade.verifyKeyCeremony(elgamalProofDTO));

  }

  @Test
    //@Disabled("fails with found invalid chaum pedersen proof")
  void validateConstant() {
    VerificationFacade facade = new VerificationFacade();
    ConstantChaumPedersenDTO dto = new ConstantChaumPedersenDTO(
        new ChaumPedersenProofDTO(
            new BigInteger(
                "246CB8125E1371FEBBD6DD75C02C06661132F702676C8F406EEDFE99660105153A805B7DC4F026BCC0DB53AD8BADD73DDC0D139A06D44FEBEE3AC51CA702927B2F5CC3A64ED60B442B5B1D209667936E13CAFEBB5C2A35C089BC7674A820747FF1926C94645DFC66C150BE27CC3E8F4F99B8279D19EBCEC06E5B1460E31AE17DCF175B5F590748892B8F1AD4F9A843325EE41B08DDEB38C3321F5A4F7CD80776166C8D3116541E0BEC119EA61E77D56B1BBAF005B858826A48D2477D8CCE01DE0A26ACBB4F4600D16201024A3F812CB1E1512C78738D80D07400B0C96EBC878680A4AAC3E5191D43DFF7E5F679E805FB627A0B099C43D3491DD0E42AB5A14FB80ADD2D29725B1596B6150980873DE33D176EBB768FE9DB245D4217306E7E8DE24ACC79387E21E37C59196A4B8DE049E312F8DE3736169B00EC1792B857427C05AE7FC4D387866D6C6469D677F4258E8537FD85FF9AD322F5C3C3AF397C597F38EC1602D608631478AAF834CC94F9D6A0B9319CAFF1385D999BDE994F986A30A79305F34A3A99F2F495DD5EAD557DBFA062EC2F7447AB1EEB5E7B3D8429762BAD7CD2ABBCFFC3349FFC6C0A0541D8471E79A51B20D94E30C18DE4E9BD4A5DCD48750878D57DEBB6B511ECA6FD38963D9CB42DFAF881197766A183ECDE324B7A774DD915400FFAB57456FD10FF962720797091D3F8203CBC9212E05FF20C9F6DA4",
                16),
            new BigInteger(
                "D6D1A3EE06A0F78B010C4B3ED32D1AF34E3BFF992A2F20F34E493424984AE09CFD4633CBA3752F50E61858EE4E4C602D94CCB0D84FE373609114ED608DEABEFBF2E9140DEC9BCAD517895CE4B2C99C8CB249942BA40CCD85AE789E9B1619F43F0257CA61E37FCB56DF36C98C86A1291F1960AD4B8AC57661AB42A8EB2C290E9D14AB2BF5D62B6A1203D7AFAF600CFB6144A3A85A5D53127752AFF451C2EA0DBE9DAE34747F2083BDE8C8AD44D0726C27F3F132B28DDCBC8729F6503801B2283BEFFA872418A3C01A5509EA3180D6372CC2C524645699DF576281AABE0608018485DD9375CEB3D3A71A2E4F46B23C2F23D3AD30ED93DC1ACAB123222521CBC21ADC79CE27C3760BDBAACAFF9CA2756E577CC5ADB7F929897D9432ED1455D3D2739C3A76791C474E2359B3E632F995C8D169636E99C014B37F677ABC0C69958B30973F54F0D4DCF740B63CAF9BC89F69A95242C87D584F20757DF7EF18519750E6DA8C38FF565F14D6E988B99E4B91918E6BF73603982695A40015BE2987EB44F10832CC9D079025E172F5774C5714C461A2FE12BF4A6EA51A43F835F70870F239D8573FCA0C2CE760C7D811E7B89B3F9B66B775868D403CB08805AE5FCA4A99D6C1C8D10AFE2A33D83EC120565B1BDA55FCCA023D4342FF32C83B14A47127599989C101B6596D1D82B6E4FDD6DE6FD9FB18E289AD103E3A0258C1F987A09137FE",
                16),
            new BigInteger("952E6BBC3B24BB2ACB217DFC248A34F3434EA3DF1751A974400FD5399442BF11", 16),
            new BigInteger("FABBA687FD1A68C512351221BF619B81AF6DE5A9AC0057052281A5476C259619", 16)
        ),
        1
    );
    BigInteger key = new BigInteger(
        "6A6873B20406BDEA9A53BEC7E6D0A591A590A17A103310284F2F0C853E16BFE2BC2BCDE5C46DA6ABEAC412AD70CCBC2C6951B7C6B393FB5B2C243D1ABC5A030B91B341A8C5E0D519BA15A189468C57E295152B65EE4AC0297DD8BD230E92EF34DA582EB8A4349C398910D30CB428C79EEC8FCA60DC411F85A84E88C8141CD618D8CD60A17DC92C8540C20C28EC21B1304AB281D34B0B624A5BF0F947FD9D26F82E8997DA48CCFCF2A6A57D2576EE0AD829CE25BDDA28E552CE60773ADA8BF44FAD2A228DC0DABF9F33D948848FF11CB6CBA664065CB91A86F3F6FF70476F4A5B9C2750AF9DB05F2CE9D0351F4DB2E2F91420B92285A2507EFBD15DB53018C1AF262500DF912D3C7EFEFEEEC2360DD6F608A6F832E541C6A66AF5996A692E38FA0B6E13255C5956148FA68BEEDBCFAF62A19AACAF9826E1CB317D9F453AE50BFC85ADB74E1102047D9770BDD6574CB794D2AD01C4E638397A2EA87175973FE2266B6DD51DFE872447D25DA720E77B4D9573A229BBBFED5A431FC609FF9D97A8D0F9FFF2029026C6A648DB2B9FC9CF006D1FB7A472DD352DB295230944CEC81C8736AD03158467631EC4C5156B74FCC17950ECCD9A2570E99BF8D17E943E2182C474171729C9785BE8E32D147B1612AF91B3D83E16D4B392987009F9428C3FA905DCE98395F6B9D51BAA91CB0292A6CDA2135381B119423B311F018D2FDA5C294A",
        16);
    when(election2.getPublicKey()).thenReturn(key);
    BigInteger accPad = new BigInteger(
        "DDECA18B2D1789C0F7B441CE316F33464352CED64EFD548A73E1E1CCBCD9A282B12601D05DC203738CF9761BF3D97096851D9E0C32DADCA298D436E4C25F588BF06F2DC53B18529020493CF5B3F51DCB403099D22F1D97AA6B60C8374050EC4FECA49B016FB7D6A4FE11FA2B90E7AE29D54C0FD28345E58810A55C2948A19936D366E74BAB8736BE36DA0833C0A0A5722060F2A2CA671459E2AC968F35E88EE0BF6DCB9E1931C2E60974ACAC1C569DE4A7EA969B5A318CE66AF17A79CC9136E848D57B0F10494E6B27CB4EE34C1C8A68895B09C5E8BA7EB8A8A1083974E0FC909B8D17062B1D928978A773B361448AAA8C874C064D3F2553F4EF77D8648CD5809C24FF41ECB1C01783724D67785FA4DE1BA5588DE2226D7BF4B888E330735838A6712BC8CA8B6BEDBF93D7034BD1EEE4F67B039076C9A098A89D995616D2F3D7E48B2DE1E44DD81669888D5EF438544D6433FC8D1CDAC05AA844D2E5CDF35567ECB5719379901BEF24B6FB7E91F408740623FB0DF8450EB8654470BC6BB79D72893217CD8C37DF76D6D59BF4B784B98CA70F441761327127631B0B1ED91A5F70F829BDEF6FA680F6B9958B29A832B81FB003637AC31F64E1F006CE96F8A80085359743F7E0F31B22EF06D5C086BE9144B9B34EDD1E25B52312A3810BEB1CDF7DF3A706EE2C02EACFAB0649815788E85639ADDEE91D0397C035BA5EFF70671DD4",
        16);
    BigInteger accData = new BigInteger(
        "9CC24BCA83ECE27574B2881D8D36698D3A5AD08E56A320377E56B05A0E4197FB9D564AA0398AA3339A21802C6AD8F585CDE875B055F5EE7BAE3BDEDE07CE3ADC2E1E2BAACB8B36DD8765BC09BCC377F1CA4905C6C727CAC741190D92F8C4874522D8AC8DB699083C162DE5A6119D1D620839F1BE8C8A75AAFC9EE5A19111786264BEA73580E11F04C4228A36989380BC686E32E45D46EEF9B001D1768051CF814CCB929AD420E1427BBB637CAA7C14D10871D1181E279265550B19D1D2FE5D63BFDA9C8FC5D6FABDC76A52E027281E107D9557F40FA0F3C2283AFA19621F7BAF59A0AC6C914B59B3991EB5DEAA097CDBF9BAE6701CD8A6070F070CED71064796315D25676CBEE4B5549C7F03573778CB187BD186D4E4DA917D5BFF10039E0B8EFAB2E63F343BD7178A53A212213F14FBC2EEC1ADBF13DD22DD19F583843AC95B3FBBF9146E575F13944F79C7FBF1C6D941EA6A59F70E4310B3D30BB56DD4819667B34114A05DD0B7EDF5022FB3DBC2492B92DF6856E564F12FC370BCA367D38D9C1DF8EA2129B1BEAA8EF460CB84ED365AD9E292E4D148B36CBFBD7823F6DB1E742F0CCC7EC9AAE236AA2B1D7C0CF8F971D4F53D91CD6113FC6E694A9E2D42E9D4CF7405CA059540354B46F8BAB15876A2F570254E593168E9232AA0A4789C68DC900D36F50A5D92E276A049FB431E5823036C261E8C7DF5A0AFB180AD5E8B",
        16);
    BigInteger baseHash = new BigInteger(
        "102492707988218454748947806399063389447452919793871687604555900826320930392063", 10);
    System.out.println(Group.int_to_p(accPad).orElseThrow().base16());
    System.out.println(
        facade.validateConstantChaumPedersen(dto, election2, accPad, accData, baseHash));
  }

}